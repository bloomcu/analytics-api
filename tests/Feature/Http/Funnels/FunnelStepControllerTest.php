<?php

namespace Tests\Feature\Http\Funnels;

use Tests\TestCase;

/**
 * @see \DDD\Http\Funnels\FunnelStepController
 */
class FunnelStepControllerTest extends TestCase
{
    /**
     * @test
     */
    public function destroy_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->deleteJson('api/{organization}/funnels/{funnel}/steps/{step}');

        $response->assertOk();
        $response->assertJsonStructure([
            // TODO: compare expected response data
        ]);
        $this->assertModelMissing($step);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request(): void
    {
        $this->assertActionUsesFormRequest(
            \DDD\Http\Funnels\FunnelStepController::class,
            'store',
            \DDD\Domain\Funnels\Requests\StepCreateRequest::class
        );
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->postJson('api/{organization}/funnels/{funnel}/steps', [
            // TODO: send request data
        ]);

        $response->assertOk();
        $response->assertJsonStructure([
            // TODO: compare expected response data
        ]);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request(): void
    {
        $this->assertActionUsesFormRequest(
            \DDD\Http\Funnels\FunnelStepController::class,
            'update',
            \DDD\Domain\Funnels\Requests\StepUpdateRequest::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->putJson('api/{organization}/funnels/{funnel}/steps/{step}', [
            // TODO: send request data
        ]);

        $response->assertOk();
        $response->assertJsonStructure([
            // TODO: compare expected response data
        ]);

        // TODO: perform additional assertions
    }

    // test cases...
}
